"use strict";
var ko = require('knockout');
var ViewModel = function () {
    var self = this;
    self.storeItems = ko.observableArray();
    self.error = ko.observable();
    self.detail = ko.observable();
    self.authors = ko.observableArray();
    var storeItemsUri = '/api/storeItems/';
    var authorsUri = '/api/authors/';
    self.getStoreItemDetail = function (item) {
        ajaxHelper(storeItemsUri + item.Id, 'GET').done(function (data) {
            self.detail(data);
        });
    };
    self.newStoreItem = {
        Author: ko.observable(),
        Title: ko.observable(),
        Description: ko.observable(),
        Created: ko.observable()
    };
    function getAuthors() {
        ajaxHelper(authorsUri, 'GET').done(function (data) {
            self.authors(data);
        });
    }
    self.addStoreItem = function (formElement) {
        var storeItem = {
            AuthorId: self.newStoreItem.Author().Id,
            Title: self.newStoreItem.Title(),
            Description: self.newStoreItem.Description(),
            Created: self.newStoreItem.Created(),
        };
        ajaxHelper(storeItemsUri, 'POST', storeItem).done(function (item) {
            self.storeItems.push(item);
        });
    };
    function ajaxHelper(uri, method, data) {
        self.error(''); // Clear error message
        return $.ajax({
            type: method,
            url: uri,
            dataType: 'json',
            contentType: 'application/json',
            data: data ? JSON.stringify(data) : null
        }).fail(function (jqXHR, textStatus, errorThrown) {
            self.error(errorThrown);
        });
    }
    function getAllStoreItems() {
        ajaxHelper(storeItemsUri, 'GET').done(function (data) {
            self.storeItems(data);
        });
    }
    // Fetch the initial data.
    getAllStoreItems();
    getAuthors();
};
ko.applyBindings(new ViewModel());
